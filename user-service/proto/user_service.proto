syntax = "proto3";

option go_package = "github.com/NikolinaSesa/Booking/user-service/proto";

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";

service UserService{
  rpc Get(GetRequest) returns(GetResponse){
    option (google.api.http) = {
      get: "/users/user/{id}"
    };
  }

  rpc GetAll(GetAllRequest) returns(GetAllResponse){
    option(google.api.http) = {
      get: "/users/getAll"
    };
  }

  rpc UpdateHost(UpdateHostRequest) returns(UpdateHostResponse){
    option (google.api.http) = {
      put: "/users/update"
      body: "hostsRating"
    };
  }
  rpc GetUserByUsernameAndPassword(LoginRequest) returns (LoginResponse){
    option (google.api.http) = {
      get: "/users/login/{username}/{password}"
    };
  }

  rpc UpdateApartment(UpdateApartmentRequest) returns (UpdateApartmentResponse){
    option (google.api.http) = {
      put: "/apartments/update"
      body : "apartmentsRating"
    };
  }

  rpc GetAllFilteredApartments(FilterAllApartmentsRequest) returns(FilterAllApartmentsResponse){
    option(google.api.http) = {
      get: "/apartments/filter/{lowerPrice}/{upperPrice}/{benefit}/{hostId}"
    };
  }

  rpc GetReservationsByGuestId(GetReservationsByGuestIdRequest) returns(GetReservationsByGuestIdResponse){
    option(google.api.http) = {
      get: "/reservations/getByGuestId/{id}"
    };
  }

  rpc GetFlightsByReservationDate(GetFlightsRequest) returns(GetFlightsResponse){
    option(google.api.http) = {
      get: "/flights/getByReservationDate/{date}"
    };
  }

}

message GetRequest {
  string id = 1;
}

message GetResponse{
  User user = 1;
}

message GetAllRequest{

}

message GetAllResponse {
  repeated User users = 1;
}

message UpdateHostRequest{
  HostsRating hostsRating = 1;
}

message UpdateHostResponse{
  Host host = 1;
}

message LoginRequest{
  string username = 1;
  string password = 2;
}

message LoginResponse{
  User user = 1;
}

message UpdateApartmentRequest{
  ApartmentsRating apartmentsRating = 1;
}

message UpdateApartmentResponse{
  Apartment apartment = 1;
}

message GetReservationsByGuestIdRequest{
  string id = 1;
}
message GetReservationsByGuestIdResponse{
  repeated Reservation reservations = 1;
}

message GetFlightsRequest{
  string date = 1;
}

message GetFlightsResponse{
  repeated Flight flights = 1;
}

message User {
  string id = 1;
  string firstName = 2;
  string lastName = 3;
  string role = 4;
  string mark = 5;
}

message Host {
  string id = 1;
  string firstName = 2;
  string lastName = 3;
  string role = 4;
  string avgRating = 5;
}

message HostsRating{
  string hostId = 1;
  string userId = 2;
  string userFirstName = 3;
  string userLastName = 4;
  string rating = 5;
}

message FilterAllApartmentsRequest{
  string lowerPrice = 1;
  string upperPrice = 2;
  string benefit = 3;
  string hostId = 4;
}

message FilterAllApartmentsResponse{
  repeated Apartment apartments = 1;
}

message Apartment{
  string id = 1;
  string name = 2;
  string location = 3;
  string benefits = 4;
  string generalPrice = 5;
}

message ApartmentsRating{
  string apartmentId = 1;
  string userId = 2;
  string userFirstName = 3;
  string userLastName = 4;
  string rating = 5;
}

message Reservation{
  string id = 1;
  Apartment apartment = 2;
  string StartDate = 3;
  string EndDate = 4;
  string GuestsNumber = 5;
}

message Flight{
  string id = 1;
  string departure = 2;
  string departurePlace = 3;
  string arrivalPlace = 4;
  string price = 5;
  string numOfFreeSeats = 6;
}
